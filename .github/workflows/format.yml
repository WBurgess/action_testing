name: Format Testing and Github Script Testing

on:
  workflow_call:
    inputs:
      RUN_OUTPUT:
        description: 'Should run output?'
        type: boolean
      ALT_DOCKER_TAG:
        description: 'New docker tag'
        type: string
      ENVIRONMENTS:
        description: 'Envs'
        default: 'env1,env2'
        type: string

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Output Something
        if: inputs.RUN_OUTPUT
        id: output
        run: |
          echo "docker_image_uri=AWESOME" >> $GITHUB_OUTPUT

      - name: Check Format
        run: 'echo "DOCKER IMAGE: $DOCKER_IMAGE"'
        env:
          DOCKER_IMAGE: ${{ steps.output.outputs.docker_image_uri || format('clientapi:{0}', inputs.ALT_DOCKER_TAG) }}

  parse-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Build Matrix
        uses: actions/github-script@v7
        id: build-matrix
        env:
          INPUT_ENVIRONMENTS: ${{ inputs.ENVIRONMENTS }}
        with:
          script: |
            const envs = core.getInput('environments');
            const DEPLOYABLE_ENVS = [ 'uat', 'prod' ];

            console.log(`Inputs:\n  Envs: ${envs}`);

            // Map into CDK commands
            const envCommands = envs
              ? envs.split(',')
                    .filter(env => DEPLOYABLE_ENVS.includes(env))
                    .map(env => `${env}/*`)
              : undefined

            console.log(`PARSED: ${envCommands}`);