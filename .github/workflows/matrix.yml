name: Matrix Testing

on:
  workflow_dispatch:
    inputs:
      CLIENTS:
        type: string
        description: 'Comma separated list of client names'

jobs:
  parse-inputs:
    runs-on: ubuntu-latest
    outputs:
      debug: ${{ steps.build-matrix.outputs.debug }}
      deploy-matrix: ${{ steps.build-matrix.outputs.deploy-matrix }}
    continue-on-error: true
    steps:
      - name: Build Matrix
        uses: actions/github-script@v7
        id: build-matrix
        with:
          # result-encoding: json
          script: |
            const clients = process.env.CLIENTS;
            console.log(`RAW: ${clients}`);

            // Parse into cdk names
            const cdkClients = clients
              .replace("dev", "Dev")
              .replace("uat", "UAT")
              .replace("uatpr", "UAT-PR")
              .replace("prod", "Prod")

            // goal: ["uat","dev","prod"]
            const newClients = `[${cdkClients.split(',').map(c => '\"' + c + '\"')}]`

            console.log(`PARSED: ${newClients}`);
            core.setOutput('debug', clients);
            core.setOutput('deploy-matrix', newClients);
        env:
          CLIENTS: ${{ github.event.inputs.CLIENTS }}

      - name: DEBUG PARSED
        run: |
          DEBUG='${{ fromJson(steps.build-matrix.outputs.deploy-matrix) }}'
          echo "PARSED: $DEBUG"

  deploy:
    runs-on: ubuntu-latest
    needs: [ parse-inputs ]
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJson(needs.parse-inputs.outputs.deploy-matrix) }}
    steps:
      - name: Reloading the Matrix
        id: reload
        run: |
          echo "RELOADING: ${{ matrix.environment }}"

      - name: Output
        id: output
        run: |
          echo "deploy-${{ matrix.environment }}=${{ steps.reload.outcome }}" >> $GITHUB_OUTPUT

  output:
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: Output the Matrix
        run: |
          echo "${{ needs.deploy.outputs[0] }}"
          echo "${{ needs.deploy.outputs.* }}"

      - name: Output results
        run: |
          echo "${{ needs.deploy.result }}"

  deploy-input-will-fail:
    runs-on: ubuntu-latest
    needs: [ parse-inputs ]
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJson(github.event.inputs.CLIENTS) }}
    steps:
      - name: Reloading the Matrix
        run: |
          echo "RELOADING: ${{ matrix.environment }}"