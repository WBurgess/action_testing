name: Conditional Jobs

on:
  pull_request_review:
    types: [ submitted ]

  workflow_dispatch:

jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest
    outputs:
      truthy-value: ${{ steps.output-truth.outputs.truthy-value }}
    steps:
      - name: 'head.ref'
        run: 'echo ${{ github.event.pull_request.head.ref }}'
      - name: 'base.ref'
        run: 'echo ${{ github.event.pull_request.base.ref }}'
      - name: 'github.event_name'
        run: 'echo ${{ github.event_name}}'
      - name: 'for conditional testing'
        id: output-truth
        run: 'echo "truthy-value=true" >> $GITHUB_OUTPUT'

  hasfiles:
    name: Hash Files
    runs-on: ubuntu-latest
    steps:
      - name: Put file
        run: |
          mkdir hashTest
          touch hashTest/results.txt
      
      - name: Hash test - success
        if: ${{ hashFiles('hashTest/result**') != '' }}
        run: echo "SUCCESS"

      - name: Hash test - fail
        if: ${{ hashFiles('hashTest/fail') != '' }}
        run: echo "SHOULDNT SEE ME"

  deploy-1:
    name: Deploy One
    needs: [ debug ]
    runs-on: ubuntu-latest
    outputs:
      deploy-success: ${{ steps.success-output.outputs.deploy-success }}
    steps:
      - name: Start
        run: echo "Start"

      - name: Finish
        id: success-output
        run: 'echo "deploy-success=true" >> $GITHUB_OUTPUT'

  deploy-2:
    name: Deploy Two
    needs: [ debug ]
    runs-on: ubuntu-latest
    outputs:
      deploy-success: ${{ steps.success-output.outputs.deploy-success }}
    steps:
      - name: Start
        run: echo "Start"

      - name: Finish
        id: success-output
        run: 'echo "deploy-success=true" >> $GITHUB_OUTPUT'

  deploy-skip:
    name: Deploy skipped
    needs: [ debug ]
    if: ${{  needs.debug.outputs.truthy-value == 'false' }}
    runs-on: ubuntu-latest
    outputs:
      deploy-success: ${{ steps.success-output.outputs.deploy-success }}
    steps:
      - name: Start
        run: echo "Start"

      - name: Finish
        id: success-output
        run: 'echo "deploy-success=true" >> $GITHUB_OUTPUT'

  deploy-fail:
    name: Deploy Fail
    needs: [ debug ]
    runs-on: ubuntu-latest
    outputs:
      deploy-success: ${{ steps.success-output.outputs.deploy-success }}
    steps:
      - name: Start
        run: exit 1

      - name: Finish
        id: success-output
        run: 'echo "deploy-success=true" >> $GITHUB_OUTPUT'

  tests-no-needs:
    name: "Test: no needs, but needs output from deploy-1 + deploy-2"
    # needs: [ deploy-1, deploy-2 ]
    if: ${{ needs.deploy-1.outputs.deploy-success == 'true' || needs.deploy-2.outputs.deploy-success == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo These dont run because of no needs dependency'

  tests-needs:
    name: "Test: needs deploy-1 + deploy-2"
    needs: [ deploy-1, deploy-2 ]
    if: ${{ needs.deploy-1.outputs.deploy-success == 'true' || needs.deploy-2.outputs.deploy-success == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests ran!'

  tests-needs-no-always:
    name: "Test: deploy-1 + deploy-fail"
    needs: [ deploy-1, deploy-fail ]
    if: ${{ needs.deploy-1.outputs.deploy-success == 'true' || needs.deploy-fail.outputs.deploy-success == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests did not run because of no always'

  tests-needs-fail:
    name: "Test: always + deploy-1 + deploy-fail"
    needs: [ deploy-1, deploy-fail ]
    if: ${{ always() && (needs.deploy-1.outputs.deploy-success == 'true' || needs.deploy-fail.outputs.deploy-success == 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests ran despite failure because of always'
        
  tests-needs-skip-no-always:
    name: "Test: deploy-1 + deploy-skip"
    needs: [ deploy-1, deploy-skip ]
    if: ${{ needs.deploy-1.outputs.deploy-success == 'true' || needs.deploy-skip.outputs.deploy-success == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests did not run because of no always'

  tests-needs-skip:
    name: "Test: always + deploy-1 + deploy-skip"
    needs: [ deploy-1, deploy-skip ]
    if: ${{ always() && (needs.deploy-1.outputs.deploy-success == 'true' || needs.deploy-skip.outputs.deploy-success == 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests ran despite failure because of always'

  tests-needs-fail-second-false:
    name: "Test: always + deploy-1 + deploy-fail but needs.output OR failure"
    needs: [ deploy-1, deploy-fail ]
    if: ${{ always() && (needs.deploy-1.outputs.deploy-success == 'true' || needs.deploy-1.outputs.deploy-success == 'false') }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests ran despite failure in needs.output OR because of always'

  tests-needs-job-result:
    name: "Test: looks at result == success, not looking at github outputs"
    needs: [ deploy-1, deploy-skip ]
    if: ${{ needs.deploy-1.result == 'success' || needs.deploy-skip.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests do not run because .result is only available in resuable workflows'

  tests-needs-job-result-with-bang-failure:
    name: "Test: looks at result == success, not looking at github outputs, added bang failure()"
    needs: [ deploy-1, deploy-skip ]
    if: ${{ !failure() && (needs.deploy-1.result == 'success' || needs.deploy-skip.result == 'success') }}
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: |
          echo deploy-1 result: "${{ needs.deploy-1.result }}"
          echo deploy-skip result: "${{ needs.deploy-skip.result }}"
      - name: Tests ran
        run: 'echo Tests run!'

  tests-needs-bang-failure-on-skip:
    name: "Test: !failure on skip"
    needs: [ deploy-1, deploy-skip ]
    if: ${{ !failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests run as a skip is not a failure. This also means this will run if both dependencies are skipped'

  tests-needs-bang-failure-on-fail:
    name: "Test: !failure on fail"
    needs: [ deploy-1, deploy-fail ]
    if: ${{ !failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests do not run as one of the dependencies failed'

  tests-needs-success:
    name: "Test: success on skip"
    needs: [ deploy-1, deploy-skip ]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Tests ran
        run: 'echo Tests do not run as one of the dependencies was skipped'